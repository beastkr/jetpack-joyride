var e=Object.defineProperty,t=(t,s,i)=>((t,s,i)=>s in t?e(t,s,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[s]=i)(t,"symbol"!=typeof s?s+"":s,i);import{r as s}from"./phaser-DJe_tbjO.js";!function(){const e=document.createElement("link").relList;if(!(e&&e.supports&&e.supports("modulepreload"))){for(const e of document.querySelectorAll('link[rel="modulepreload"]'))t(e);new MutationObserver(e=>{for(const s of e)if("childList"===s.type)for(const e of s.addedNodes)"LINK"===e.tagName&&"modulepreload"===e.rel&&t(e)}).observe(document,{childList:!0,subtree:!0})}function t(e){if(e.ep)return;e.ep=!0;const t=function(e){const t={};return e.integrity&&(t.integrity=e.integrity),e.referrerPolicy&&(t.referrerPolicy=e.referrerPolicy),"use-credentials"===e.crossOrigin?t.credentials="include":"anonymous"===e.crossOrigin?t.credentials="omit":t.credentials="same-origin",t}(e);fetch(e.href,t)}}();var i=s();class a extends i.Scene{constructor(){super("Boot")}preload(){this.load.image("background","assets/bg.png")}create(){this.scene.start("Preloader")}}class r{static collectCoin(){this.coin++,console.log(this.coin)}}t(r,"speed",300),t(r,"coin",0);class h extends Phaser.Physics.Arcade.Sprite{constructor(e,s,i,a){var h;super(e,s,i,a),t(this,"speed"),this.scene.physics.add.existing(this),this.scene.add.existing(this),null==(h=this.body)||h.setImmovable(!0).setAllowGravity(!1),this.speed=r.speed,this.move()}}class l extends h{constructor(e,t,s,i){super(e,t,s,i)}move(){this.speed=r.speed,this.setVelocityX(-this.speed)}checkReset(e){return this.x<=-760&&(this.x=e.x+760,!0)}}class n{constructor(e){t(this,"backgrounds",[]),t(this,"currentLast");for(var s=0;s<7;s++)this.backgrounds.push(new l(e,764*s,512,"room1"));this.currentLast=this.backgrounds[this.backgrounds.length-1]}update(){for(var e=0;e<this.backgrounds.length;e++)if(this.backgrounds[e].move(),this.backgrounds[e].checkReset(this.currentLast))return void(this.currentLast=this.backgrounds[e])}}class c{static createAnim(e,t,s,i,a,r=12,h=!0,l=-1){e.anims.get(t)||e.anims.create({key:t,frames:e.anims.generateFrameNumbers(s,{start:i,end:a}),frameRate:r,repeat:h?l:0})}static play(e,t,s){if(e.anims.play(t,!0),!s)return;const i=e.anims.currentAnim;if(i&&s>=0&&s<i.frames.length){const t=i.frames[s];e.anims.setCurrentFrame(t)}}static playAnim(e,t,s){e.list.forEach(s=>{e.scene.anims.get(t+"_"+s.name)&&c.play(s,t+"_"+s.name)}),s&&e.list[0].once("animationcomplete-"+t+"_head",()=>s())}}class o extends h{constructor(e,s,i,a){super(e,s,i,a),t(this,"flipped",!1),t(this,"using",!1),this.CoinAnimInit(),e.physics.add.overlap(this,e.player,()=>{r.collectCoin(),this.kill()})}update(){this.move(),this.x<=1500&&!this.flipped&&this.using&&(c.play(this,"coin_flip"),this.flipped=!0),this.x<=-20&&this.kill()}move(){this.speed=r.speed,this.setVelocityX(-this.speed)}CoinAnimInit(){c.createAnim(this.scene,"coin_flip","coin",0,7,12,!1)}moveTo(e,t){this.x=e,this.y=t}kill(){this.using=!1,this.flipped=!1,this.disableBody(!0,!0)}}const d=[[0,1,1,0,1,1,0],[1,1,1,1,1,1,1],[1,1,1,1,1,1,1],[0,1,1,1,1,1,0],[0,0,1,1,1,0,0],[0,0,0,1,0,0,0]];class p extends Phaser.GameObjects.Group{constructor(e){super(e),this.createMultiple({frameQuantity:300,key:"coin",active:!1,visible:!1,classType:o})}update(){this.getChildren().forEach(e=>{e.update()})}test(e){const t=d;let s=300*Math.random()+300;this.spawnFromPattern(e,t,3e3,s,32),console.log("aa")}spawnFromPattern(e,t,s,i,a=64){t.forEach((e,t)=>{e.forEach((e,r)=>{if(1!==e)return;const h=s+r*a,l=i+t*a,n=this.getFirstDead(!1);n&&(n.moveTo(h,l),n.enableBody(!0,h,l,!0,!0).setVisible(!0),n.using=!0,n.move())})})}}class y extends h{constructor(e,t,s,i){var a;super(e,t,s,i),this.scene.physics.add.existing(this),this.scene.add.existing(this),null==(a=this.body)||a.setAllowGravity(!1),this.speed=r.speed,this.move()}move(){this.speed=r.speed,this.body.setVelocityX(-this.speed)}}class u extends y{constructor(e,t,s,i){super(e,t,s,i),this.headAnimCreate(),c.play(this,"elechead"),this.scale=1.5,this.scene.physics.add.overlap(this,this.scene.player,()=>{this.scene.player.switchState("deadbyzap")})}headAnimCreate(){c.createAnim(this.scene,"elechead","elecOn",0,3)}}class m extends y{constructor(e,t,s,i){super(e,t,s,i),this.zapAnim(),c.play(this,"zapFX"),this.setScale(1,.8),this.scene.physics.add.overlap(this,this.scene.player,()=>{let e=this.scene.player;e.isdead||e.switchState("deadbyzap")})}zapAnim(){c.createAnim(this.scene,"zapFX","zapFX",0,31)}}class g extends Phaser.GameObjects.Container{constructor(e,s,i,a,r){super(e,s,i),t(this,"head"),t(this,"tail"),t(this,"zapfx",[]),t(this,"headfx"),t(this,"tailfx"),this.animInit(),this.head=new u(e,0,0,""),this.tail=new u(e,a,r,""),this.calc(a,r),this.fxSetup(a,r),this.add([this.headfx,this.tailfx,...this.zapfx,this.head,this.tail]),this.rotateOrb(),e.add.existing(this)}rotateOrb(){const e=Phaser.Math.Angle.Between(this.head.x,this.head.y,this.tail.x,this.tail.y),t=Phaser.Math.RadToDeg(e);this.head.setAngle(t+90),this.tail.setAngle(t+180+90),this.zapfx.forEach(e=>{e.setAngle(t)})}update(){this.tail.x<=-100-this.x&&this.setActive(!1)}animInit(){c.createAnim(this.scene,"elecglow","elecOnGlow",0,15)}fxSetup(e,t){this.headfx=this.scene.physics.add.sprite(0,0,""),this.tailfx=this.scene.physics.add.sprite(e,t,""),this.headfx.body.setAllowGravity(!1),this.tailfx.body.setAllowGravity(!1),c.play(this.headfx,"elecglow"),c.play(this.tailfx,"elecglow"),this.headfx.body.setVelocityX(-r.speed),this.tailfx.body.setVelocityX(-r.speed)}calc(e,t){const s=Math.sqrt(e*e+t*t),i=Math.floor(s/32),a=Phaser.Math.Angle.Between(0,0,e,t),h=32*Math.cos(a)-1,l=32*Math.sin(a)-t/Math.abs(t);for(let n=0;n<=i+1;n++){const e=h*n,t=l*n,s=new m(this.scene,e,t,"");if(s.setAngle(Phaser.Math.RadToDeg(a)),s.body instanceof Phaser.Physics.Arcade.Body){s.body.setAllowGravity(!1),s.body.setVelocityX(-r.speed);const e=s.width,t=s.height;s.body.setSize(e,t/4),s.body.setOffset(0,t/2-t/8)}c.play(s,"zapFX",n%32),this.zapfx.push(s)}}}class f{constructor(e,s){t(this,"player"),t(this,"scene"),this.player=s,this.scene=e}jetLaunch(){this.player.isdead||(this.scene.input.activePointer.isDown?this.player.body.setAccelerationY(-5e3):this.player.body.setAccelerationY(200))}}class b extends Phaser.GameObjects.Container{constructor(e){super(e.scene),t(this,"playerHead"),t(this,"playerBody"),t(this,"playerJetpack"),this.scene=e.scene,this.addHead(),this.addBody(),this.addJetPack(),e.add(this),this.scale=4}addBody(){this.playerBody=this.scene.add.sprite(10,5,"player_body"),this.add(this.playerBody),this.playerBody.setName("body")}addHead(){this.playerHead=this.scene.add.sprite(10,-8,"player_head"),this.add(this.playerHead),this.playerHead.setName("head")}addJetPack(){this.playerJetpack=this.scene.add.sprite(0,5,"player_jetpack"),this.add(this.playerJetpack),this.playerJetpack.setName("jetpack")}}class x{constructor(e){t(this,"player"),this.player=e,this.animInit()}}class w extends x{constructor(){super(...arguments),t(this,"progress",0)}onEnter(){c.playAnim(this.player.playerSprite,"dead"),this.player.playerSprite.setRotation(Phaser.Math.DegToRad(-90)),this.player.playerSprite.y+=50,this.player.body.setAcceleration(0,0)}onUpdate(...e){r.speed<100&&this.player.scene.scene.restart()}onExit(){this.player.playerSprite.y-=30,this.player.playerSprite.setRotation(Phaser.Math.DegToRad(0))}animInit(){this.createDeadAnim()}createDeadAnim(){c.createAnim(this.player.scene,"dead_head","player_head",24,31,12,!1),c.createAnim(this.player.scene,"dead_body","player_body",24,31,12,!1)}}class A extends x{constructor(){super(...arguments),t(this,"progress",0)}onEnter(){this.progress=0,this.player.playerSprite.playerJetpack.setVisible(!1),this.player.isdead=!0,c.playAnim(this.player.playerSprite,"deadzap",()=>{this.player.switchState("dead")})}onUpdate(...e){this.player.body.velocity.y<0&&this.player.body.setVelocityY(0)}onExit(){}animInit(){this.createZapDeadAnim()}createZapDeadAnim(){c.createAnim(this.player.scene,"deadzap_head","player_head",16,19,12,!1),c.createAnim(this.player.scene,"deadzap_body","player_body",16,19,12,!1)}}class k extends Phaser.GameObjects.Container{constructor(e,s){super(e),t(this,"bulletParticle"),t(this,"explode"),t(this,"player"),this.player=s,this.createParticle(),this.createExplode(),this.player.add(this)}createParticle(){this.bulletParticle=this.scene.add.particles(0,0,"bullet",{follow:this.player,angle:{min:70,max:110},speed:2e3,scale:{start:2,end:2},alpha:{start:1,end:1},lifespan:1e3,frequency:50,quantity:1,emitting:!0})}stop(){this.bulletParticle.stop()}start(){this.bulletParticle.start()}kill(){const e=this.bulletParticle.overlap(this.player.scene.bot.body);e.length>0&&e.forEach(e=>{this.explode.emitParticleAt(e.x,e.y),e.kill()})}createExplode(){this.explode=this.scene.add.particles(0,0,"bullet_fx",{frame:[0,1,2,3],emitting:!1,speed:0,scale:1.2,quantity:1,lifespan:50})}}class S extends x{constructor(e){super(e),t(this,"falling",!1),t(this,"jetFX"),t(this,"bulletParticle"),this.bulletParticle=new k(this.player.scene,this.player)}onEnter(){this.jetFX||this.createJetFX()}onUpdate(...e){this.player.controller.jetLaunch(),this.checkFall(),this.falling||this.flyup(),this.bulletParticle.kill()}setFXVisible(e){this.jetFX.setVisible(e)}flyup(){this.setFXVisible(!0),c.playAnim(this.player.playerSprite,"flyup"),this.bulletParticle.start()}onExit(){this.setFXVisible(!1),this.player.body.setVelocityY(0),this.bulletParticle.stop()}animInit(){this.flyUpAnimInit(),this.flyDownAnimInit(),this.jetFXAnim()}flyUpAnimInit(){c.createAnim(this.player.scene,"flyup_head","player_head",4,7,24),c.createAnim(this.player.scene,"flyup_body","player_body",4,7,24),c.createAnim(this.player.scene,"flyup_jetpack","player_jetpack",4,7,24)}flyDownAnimInit(){c.createAnim(this.player.scene,"flydown_head","player_head",8,11,12,!1),c.createAnim(this.player.scene,"flydown_body","player_body",8,11,12,!1),c.createAnim(this.player.scene,"flydown_jetpack","player_jetpack",8,11,12,!1)}createJetFX(){this.jetFX=this.player.scene.add.sprite(0,0,""),console.log(this.player.list),this.player.playerSprite.add(this.jetFX),this.jetFX.setName("jetfx"),this.jetFX.scale=.4,this.jetFX.y=24}jetFXAnim(){c.createAnim(this.player.scene,"flyup_jetfx","jet_fx",0,3,24),c.createAnim(this.player.scene,"flyup_bulletfx","bullet_fx",0,3,24)}checkFall(){const e=this.player.body;e.velocity.y>0&&!this.falling&&(this.falling=!0,c.playAnim(this.player.playerSprite,"flydown"),this.setFXVisible(!1),this.bulletParticle.stop()),e.velocity.y<=0&&(this.falling=!1)}}class _ extends x{constructor(e){super(e)}onEnter(){c.playAnim(this.player.playerSprite,"landing",()=>{c.playAnim(this.player.playerSprite,"walking")})}onUpdate(...e){this.player.controller.jetLaunch(),this.player.body.velocity.y<0&&this.player.switchState("flying")}onExit(){}animInit(){this.landingInit(),this.walkingAnimInit()}walkingAnimInit(){c.createAnim(this.player.scene,"walking_head","player_head",0,3),c.createAnim(this.player.scene,"walking_body","player_body",0,3),c.createAnim(this.player.scene,"walking_jetpack","player_jetpack",0,3)}landingInit(){c.createAnim(this.player.scene,"landing_head","player_head",12,15,12,!1),c.createAnim(this.player.scene,"landing_body","player_body",12,15,12,!1),c.createAnim(this.player.scene,"landing_jetpack","player_jetpack",12,15,12,!1)}}class P extends Phaser.GameObjects.Container{constructor(e,s,i){super(e,s,i),t(this,"isdead",!1),t(this,"shadowSprite"),t(this,"playerSprite"),t(this,"currentState"),t(this,"controller"),t(this,"states"),this.setupBody(),this.setUpSprite(),this.stateInit(),this.controller=new f(this.scene,this),this.scene.add.existing(this),this.switchState("flying"),this.scale=.5,this.setDepth(111)}update(...e){super.update(e),this.currentState&&this.currentState.onUpdate(e),this.shadowSprite.scale=(this.y+300)/350}switchState(e){"walking"==e&&this.isdead||this.currentState!==this.states[e]&&(this.currentState&&this.currentState.onExit(),this.currentState=this.states[e],this.currentState.onEnter())}setUpSprite(){this.shadowSprite=this.scene.add.sprite(0,0,"shadow"),this.playerSprite=new b(this),this.shadowSprite.x=this.x+20,this.shadowSprite.y=750,this.shadowSprite.setAlpha(.5)}setupBody(){this.scene.physics.add.existing(this),this.body.setCollideWorldBounds(!0).setSize(70,128).setOffset(0,-64)}stateInit(){this.states={walking:new _(this),flying:new S(this),deadbyzap:new A(this),dead:new w(this)}}}class v extends Phaser.Scene{constructor(){super("GameScene"),t(this,"bg"),t(this,"player"),t(this,"progress",0),t(this,"bot"),t(this,"coinManager"),t(this,"obstacle")}preload(){this.LoadBodySprite(),this.LoadHeadSprite(),this.LoadJetPack(),this.LoadCoin(),this.LoadElec(),this.load.image("room1","assets/Levels/Room1/room1_1.png"),this.load.image("shadow","assets/Characters/effect_shadow.png"),this.load.image("bullet","assets/Characters/Effects/effect_smgbullet.png")}create(){this.obstacle=[],this.cameras.main.setViewport(0,-128,1920,1024),r.speed=300,this.bg=new n(this),this.player=new P(this,100,500),this.createBot(),this.createTop(),this.coinManager=new p(this),this.coinManager.test(this)}update(e,t){this.coinManager.update(),this.bg.update(),this.player.update(),this.progress+=t,this.obstacle.forEach(e=>{e.update()}),this.obstacle=this.obstacle.filter(e=>e.active),this.progress>=2e3&&(r.speed+=this.player.isdead?-100:5,r.speed=r.speed<0?0:r.speed,this.progress=0,this.player.isdead||(this.coinManager.test(this),this.obstacle.push(new g(this,2e3,500,Phaser.Math.Between(100,200),0===Phaser.Math.Between(0,1)?Phaser.Math.Between(-200,-100):Phaser.Math.Between(100,100))),console.log(this.obstacle)))}createBot(){this.bot=new Phaser.GameObjects.Rectangle(this,400,1e3,800,500),this.physics.add.existing(this.bot),this.physics.add.collider(this.bot,this.player,()=>{this.player.switchState("walking")}),this.bot.body.setImmovable(!0).setAllowGravity(!1),this.add.existing(this.bot)}createTop(){let e=new Phaser.GameObjects.Rectangle(this,400,20,800,500);this.physics.add.existing(e),this.physics.add.collider(e,this.player),e.body.setImmovable(!0).setAllowGravity(!1),this.add.existing(e)}LoadBodySprite(){this.load.spritesheet("player_body","assets/Characters/Barry/defaultBody.png",{frameWidth:32,frameHeight:32})}LoadHeadSprite(){this.load.spritesheet("player_head","assets/Characters/Barry/defaultHead.png",{frameWidth:32,frameHeight:32})}LoadJetPack(){this.load.spritesheet("player_jetpack","assets/Characters/Jetpacks/jetpackDefault.png",{frameWidth:32,frameHeight:44}),this.load.spritesheet("jet_fx","assets/Characters/Effects/jetfx.png",{frameWidth:64,frameHeight:64}),this.load.spritesheet("bullet_fx","assets/Characters/Effects/bulletfx.png",{frameWidth:64,frameHeight:64})}LoadCoin(){this.load.spritesheet("coin","assets/Entities/coin_sheet.png",{frameWidth:32,frameHeight:32})}LoadElec(){this.load.spritesheet("elecOn","assets/Obstacles/Zapper/orbAnim.png",{frameWidth:62,frameHeight:42}),this.load.spritesheet("elecOnGlow","assets/Obstacles/Zapper/RegularZappers/glow.png",{frameWidth:128,frameHeight:128}),this.load.spritesheet("zapFX","assets/Obstacles/Zapper/RegularZappers/zapEffect.png",{frameWidth:32,frameHeight:117})}}class j extends i.Scene{constructor(){super("MainMenu"),t(this,"background"),t(this,"logo"),t(this,"title")}preload(){this.load.image("splash","assets/Splash/loading_screen.png")}create(){const{width:e,height:t}=this.scale;this.background=this.add.image(e/2,t/2,"splash");const s=this.background.width,i=this.background.height,a=this.scale.width/s,r=this.scale.height/i,h=Math.max(a,r);this.background.setScale(h),this.background.setScrollFactor(0),this.input.once("pointerdown",()=>{this.scene.start("GameScene")})}}class E extends i.Scene{constructor(){super("Preloader")}init(){this.add.image(512,384,"background"),this.add.rectangle(512,384,468,32).setStrokeStyle(1,16777215);const e=this.add.rectangle(282,384,4,28,16777215);this.load.on("progress",t=>{e.width=4+460*t})}preload(){this.load.setPath("assets"),this.load.image("logo","logo.png")}create(){this.scene.start("MainMenu")}}const F={type:i.AUTO,width:1920,height:760,parent:"game-container",backgroundColor:"#028af8",scale:{mode:Phaser.Scale.FIT,autoCenter:Phaser.Scale.CENTER_BOTH},render:{antialias:!1,pixelArt:!0,roundPixels:!0},scene:[a,E,j,v],physics:{default:"arcade",arcade:{gravity:{x:0,y:1500}}}};document.addEventListener("DOMContentLoaded",()=>{new i.Game({...F,parent:"game-container"})});
